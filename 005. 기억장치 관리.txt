1. 기억장치의 관리 전략

	기억장치의 관리 전략은 보조기억장치의 프로그램이나 데이터를 주기억장치에 적재시키는 시기, 적채 위치 등을 지정하여 한정된 주기억장치의 공간을 효율적으로 사용하기 위한 것으로 반입 전략, 배치 전략, 교체 전략이 있다.
	
	반입(Fetch) 전략
		보조기억장치에 보관중인 프로그램이나 데이터를 언제 주기억장치로 적재할 것인지를 결정하는 전략이다.
	
	배치(Placement) 전략
		새로 반입되는 프로그램이나 데이터를 주기억장치의 어디에 위치시킬 것인지를 결정하는 전략이다.
		- 최초 적합(First Fit) : 프로그램이나 데이터가 들어갈 수 있는 크기의 빈 영역 중에서 첫 번째 분할 영역에 배치시키는 방법
		- 최적 적합(Best Fit) : 프로그램이나 데이터가 들어갈 수 있는 크기의 빈 영역 중에서 단편화*를 가장 작게 남기는 분할 영역에 배치시키는 방법
		- 최악 적합(Worst Fit) : 프로그램이나 데이터가 들어갈 수 있는 크기의 빈 영역 중에서 단편화를 가장 많이 남기는 분할 영역에 배치시키는 방법
		
		[예제] 주기억장치 상태가 다음 표와 같다. 기억장치 관리 전략으로 First Fit, Best Fit, Worst Fit 방법을 사용하려 할 때, 각 방법에 대하여 10K의 프로그램이 할당받게 되는 영역의 번호는?
		
			영역 번호		영역 크기		상태
			   1		   5k		공백
			   2		   14k		공백
			   3		   10k	   사용 중
			   4		   12k		공백
			   5		   16k		공백
			   
		(1) 먼저 10K가 적재될 수 있는지 각 영역의 크기를 확인한다.
		(2) First Fit : 빈 영역 중에서 10K의 프로그램이 들어갈 수 있는 첫 번째 영역은 2번이다.
		(3) Best Fit : 10K 프로그램이 들어가고 단편화를 가장 작게 남기는 영역은 4번이다.
		(4) Worst Fit : 10K 프로그램이 들어가고 단편화를 가장 많이 남기는 영역은 5번이다.
		
		*단편화 : 주기억장치의 분할된 영역에 프로그램이나 데이터를 할당할 경우, 분할된 영역이 프로그램이나 데이터보다 작거나 커서 생기는 빈 기억공간을 의미합니다.
				 - 내부 단편화 : 분할된 영역이 할당될 프로그램의 크기보다 크기 때문에 프로그램이 할당된 후 사용되지 않고 남아 있는 빈 공간
				 - 외부 단편화 : 분할된 영역이 할당될 프로그램의 크기보다 작기 때문에 프로그램이 할당될 수 없어 사용되지 않고 빈 공간으로 남아있는 분할된 전체 영역
			 
	교체(Replacement) 전략
		- 주기억장치의 모든 영역이 이미 사용중인 상태에서 새로운 프로그램이나 데이터를 주기억장치에 배치하려고 할 때, 이미 사용되고 있는 영역 중에서 어느 영역을 교체하여 사용할 것인지를 결정하는 전략이다.
		- 교체 전략에는 FIFO, OPT, LRU, LFU, NUR, SCR 등이 있다.
		
2. 가상 기억장치
	
	가상 기억장치는 보조기억장치(하드디스크)의 일부를 주기억장치처럼 사용하는 것으로, 용량이 작은 주기억장치를 마치 큰 용량을 가진 것처럼 사용하는 기법이다.
	
	- 프로그램을 여러 개의 작은 블록* 단위로 나누어서 가상 기억장치에 보관해 놓고, 프로그램 실행 시 요구되는 블록만 주기억장치에 불연속적으로 할당하여 처리한다.
	- 주기억장치의 용량보다 큰 프로그램을 실행하기 위해 사용한다.
	- 가상 기억장치의 일반적인 구현 방법은 블록의 종류에 따라 페이징 기법과 세그먼테이션 기법으로 나눌 수 있다.
	
	1. 페이징(Paging) 기법 : 
		- 가상 기억장치에 보관되어 있는 프로그램과 주기억장치의 영역을 동일한 크기로 나눈 후 나눠진 프로그램(페이지)을 동일하게 나눠진 주기억장치의 영역(페이지 프레임)에 적재시켜 실행하는 기법이다.
		- 프로그램을 일정한 크기로 나눈 단위를 페이지(Page)라고 하고, 페이지 크기*로 일정하게 나누어진 주기억장치의 단위를 페이지 프레임(Page Frame)이라고 한다.
		- 외부 단편화는 발생하지 않으나 내부 단편화는 발생할 수 있다.
		- 주소 변환을 위햇 ㅓ페이지의 위치 정보를 가지고 있는 페이지 맵 테이블(Page Map Table)이 필요하다.
		- 페이지 맵 테이블 사용으로 비용이 증가되고, 처리 속도가 감소된다.
		
	2. 세그먼테이션(Segmentation) 기법 : 
		- 가상 기억장치에 보관되어 있는 프로그램을 다양한 크기의 논리적인 단위로 나눈 후 주기억장치에 적재시켜 실행시키는 기법이다.
		- 프로그램을 배열이나 함수 등과 같은 논리적인 크기로 나눈 단위를 세그먼트라고 하며, 각 세그먼트는 고유한 이름과 크기를 갖는다.
		- 기억장치의 사용자 관점을 보존하는 기억장치 관리 기법이다.
		- 세그먼테이션 기법을 이용하는 궁극적인 이유는 기억공간을 절약하기 위해서이다.
		- 주소 변환을 위해서 세그먼트가 존재하는 위치 정보를 가지고 있는 세그먼트 맵 테이블(Segment Map Table)이 필요하다.
		- 세그먼트가 주기억장치에 적재될 때 다른 세그먼트에게 할당된 영역을 침범할 수 없으며, 이를 위해 기억장치 보호키(Storage Protection key)가 필요하다.

3. 페이지 교체 알고리즘의 개요

	페이지 교체 알고리즘은 페이지 부재(Page Fault)가 발생했을 때 가상기억장치의 필요한 페이지를 주기억장치에 적재해야 하는데, 이때 주기억장치의 모든 페이지 프레임이 사용 중이면 어떤 페이지 프레임을 선택하여 교체할 것인지를 결정하는 기법이다.
	- 페이지 교체 알고리즘에는 OPT, FIFO, LRU, LFU, NUR, SCR 등이 있다.
	
4. 주요 페이지 교체 알고리즘

	FIFO(First In First Out)
	FIFO는 각 페이지가 주기억장치에 적재될 때마다 그때의 시간을 기억시켜 가장 먼저 들어와서 가장 오래있었던 페이지를 교체하는 기법이다.
	- 이해하기 쉽고, 프래그리맹 및 설계가 간단하다.
	- 벨레이디의 모순(Belady's Anomaly) 현상*이 발생한다.
	
	
	2024.05.16 작성 중..
			 
			 